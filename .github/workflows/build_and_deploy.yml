name: Build and Deploy

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Optional: Run on pull requests to 'main'

jobs:
  build:
    name: Build, Compress, and Deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ linux, windows, macos ]
        arch: [ amd64, arm64 ]  # Build for both x86_64 and ARM64 architectures

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'  # Specify your desired Go version

      # Step 3: Build the application
      - name: Build Binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o dist/heimdahl-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

      # Step 4: Compress binaries into zip or tar.gz
      - name: Compress Binary
        run: |
          if [ "${{ matrix.os }}" == "windows" ]; then
            zip -j dist/heimdahl-${{ matrix.os }}-${{ matrix.arch }}.zip dist/heimdahl-${{ matrix.os }}-${{ matrix.arch }}.exe
          else
            tar -czvf dist/heimdahl-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C dist heimdahl-${{ matrix.os }}-${{ matrix.arch }}
          fi

      # Step 5: Upload compressed binaries as workflow artifacts
      - name: Upload Compressed Binaries
        uses: actions/upload-artifact@v3
        with:
          name: heimdahl-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/heimdahl-${{ matrix.os }}-${{ matrix.arch }}*.{zip,tar.gz}
